# for creating cluster
eksctl create cluster --name eksctl-test --nodegroup-name ng-default --node-type t3.micro --nodes 2 --profile ekscli

2023-05-02 15:39:18 [ℹ]  eksctl version 0.138.0
2023-05-02 15:39:18 [ℹ]  using region us-east-1
2023-05-02 15:39:20 [ℹ]  skipping us-east-1e from selection because it doesn't support the following instance type(s): t3.micro
2023-05-02 15:39:20 [ℹ]  setting availability zones to [us-east-1d us-east-1a]
2023-05-02 15:39:20 [ℹ]  subnets for us-east-1d - public:192.168.0.0/19 private:192.168.64.0/19
2023-05-02 15:39:20 [ℹ]  subnets for us-east-1a - public:192.168.32.0/19 private:192.168.96.0/19
2023-05-02 15:39:20 [ℹ]  nodegroup "ng-default" will use "" [AmazonLinux2/1.25]
2023-05-02 15:39:20 [ℹ]  using Kubernetes version 1.25
2023-05-02 15:39:20 [ℹ]  creating EKS cluster "eksctl-test" in "us-east-1" region with managed nodes
2023-05-02 15:39:20 [ℹ]  will create 2 separate CloudFormation stacks for cluster itself and the initial managed nodegroup
2023-05-02 15:39:20 [ℹ]  if you encounter any issues, check CloudFormation console or try 'eksctl utils describe-stacks --region=us-east-1 --cluster=eksctl-test'
2023-05-02 15:39:20 [ℹ]  Kubernetes API endpoint access will use default of {publicAccess=true, privateAccess=false} for cluster "eksctl-test" in "us-east-1"
2023-05-02 15:39:20 [ℹ]  CloudWatch logging will not be enabled for cluster "eksctl-test" in "us-east-1"
2023-05-02 15:39:20 [ℹ]  you can enable it with 'eksctl utils update-cluster-logging --enable-types={SPECIFY-YOUR-LOG-TYPES-HERE (e.g. all)} --region=us-east-1 --cluster=eksctl-test'
2023-05-02 15:39:20 [ℹ]
2 sequential tasks: { create cluster control plane "eksctl-test",
    2 sequential sub-tasks: {
        wait for control plane to become ready,
        create managed nodegroup "ng-default",
    }
}
2023-05-02 15:39:20 [ℹ]  building cluster stack "eksctl-eksctl-test-cluster"
2023-05-02 15:39:25 [ℹ]  deploying stack "eksctl-eksctl-test-cluster"
2023-05-02 15:39:55 [ℹ]  waiting for CloudFormation stack "eksctl-eksctl-test-cluster"
2023-05-02 15:54:09 [ℹ]  building managed nodegroup stack "eksctl-eksctl-test-nodegroup-ng-default"
2023-05-02 15:54:10 [ℹ]  deploying stack "eksctl-eksctl-test-nodegroup-ng-default"
2023-05-02 15:54:11 [ℹ]  waiting for CloudFormation stack "eksctl-eksctl-test-nodegroup-ng-default"
2023-05-02 15:54:42 [ℹ]  waiting for CloudFormation stack "eksctl-eksctl-test-nodegroup-ng-default"
2023-05-02 15:55:28 [ℹ]  waiting for CloudFormation stack "eksctl-eksctl-test-nodegroup-ng-default"
2023-05-02 15:56:41 [ℹ]  waiting for CloudFormation stack "eksctl-eksctl-test-nodegroup-ng-default"
2023-05-02 15:56:42 [ℹ]  waiting for the control plane to become ready
2023-05-02 15:56:43 [✔]  saved kubeconfig as "/Users/pratikpatel/.kube/config"
2023-05-02 15:56:43 [ℹ]  no tasks
2023-05-02 15:56:43 [✔]  all EKS cluster resources for "eksctl-test" have been created
2023-05-02 15:56:45 [ℹ]  nodegroup "ng-default" has 2 node(s)
2023-05-02 15:56:45 [ℹ]  node "ip-192-168-29-169.ec2.internal" is ready
2023-05-02 15:56:45 [ℹ]  node "ip-192-168-43-216.ec2.internal" is ready
2023-05-02 15:56:45 [ℹ]  waiting for at least 2 node(s) to become ready in "ng-default"
2023-05-02 15:56:46 [ℹ]  nodegroup "ng-default" has 2 node(s)
2023-05-02 15:56:46 [ℹ]  node "ip-192-168-29-169.ec2.internal" is ready
2023-05-02 15:56:46 [ℹ]  node "ip-192-168-43-216.ec2.internal" is ready
2023-05-02 15:56:49 [ℹ]  kubectl command should work with "/Users/pratikpatel/.kube/config", try 'kubectl get nodes'
2023-05-02 15:56:49 [✔]  EKS cluster "eksctl-test" in "us-east-1" region is ready

# cluster delete

eksctl delete cluster eksctl-test --profile ekscli
2023-05-02 16:05:31 [ℹ]  deleting EKS cluster "eksctl-test"
2023-05-02 16:05:34 [ℹ]  will drain 0 unmanaged nodegroup(s) in cluster "eksctl-test"
2023-05-02 16:05:34 [ℹ]  starting parallel draining, max in-flight of 1
2023-05-02 16:05:36 [ℹ]  deleted 0 Fargate profile(s)
2023-05-02 16:05:40 [✔]  kubeconfig has been updated
2023-05-02 16:05:40 [ℹ]  cleaning up AWS load balancers created by Kubernetes objects of Kind Service or Ingress
2023-05-02 16:05:44 [ℹ]
2 sequential tasks: { delete nodegroup "ng-default", delete cluster control plane "eksctl-test" [async]
}
2023-05-02 16:05:44 [ℹ]  will delete stack "eksctl-eksctl-test-nodegroup-ng-default"
2023-05-02 16:05:44 [ℹ]  waiting for stack "eksctl-eksctl-test-nodegroup-ng-default" to get deleted
2023-05-02 16:05:45 [ℹ]  waiting for CloudFormation stack "eksctl-eksctl-test-nodegroup-ng-default"
2023-05-02 16:29:10 [ℹ]  waiting for CloudFormation stack "eksctl-eksctl-test-nodegroup-ng-default"
2023-05-02 16:29:10 [ℹ]  will delete stack "eksctl-eksctl-test-cluster"
2023-05-02 16:29:12 [✔]  all cluster resources were deleted